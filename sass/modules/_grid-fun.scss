// @function units-calc
// @return - Returns the value of the width and displacement
@function units-calc($i) {
    @return ($cwidth * $i);
}

// @make-units
// $size: Name of class to use, i.e  "md" will generate .pull-md, push-md
// $pull: Generate pull classes - default: true, disable: false
// $push: Generate push classes - default: true, disable: false
// $offset: Generate offset classes - default: true, disable: false
@mixin make-units(
    $size,
    $pull: true,
    $push: true,
    $offset: true
) {

    @for $i from 1 through $units {
        @if($pull) {
            .pull-#{$size}-#{$i} {
                left: units-calc($i);
             }
        }

        @if($push) {
            .push-#{$size}-#{$i} {
                right: units-calc($i);
            }
        }

        .units-#{$size}-#{$i} {
            width: units-calc($i);
        }
    }
}


@mixin respond-to($device) {
    @if $device == mediun-device {
        @media screen and(min-width: $md-device) { @content; }
    }

    @else if $device == large-device {
        @media screen and(min-width: $lg-device) { @content; }
    }

    @else if $device == xlarge-device {
        @media screen and(min-width: $xl-device) { @content; }
    }
}

%clf {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}